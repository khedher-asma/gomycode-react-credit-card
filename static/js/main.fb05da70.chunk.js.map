{"version":3,"sources":["logo.svg","puce.png","creditCardView.js","creditCardContain.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","CreditCard","props","react_default","a","createElement","className","src","require","alt","cardNumber","date","holderName","CardContain","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","e","nbr","_this2","test","target","value","length","slice","setState","updateState","_this3","name","toUpperCase","_this4","_this5","type","maxLength","placeholder","onChange","handleNumberChange","handleNameChange","handleDateChange","React","Component","App","number","src_creditCardView","creditCardContain","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.fb05da70.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","module.exports = __webpack_public_path__ + \"static/media/puce.4ba08830.png\";","import React, { Component } from 'react';\r\nimport './creditCardView.css'\r\n\r\nconst CreditCard = (props) => {\r\n    return (\r\n        <div className=\"card\">\r\n            <div className=\"companyName\">\r\n                <h3>Company Name</h3>\r\n            </div>\r\n            <div className=\"cardPuce\">\r\n                <img src={require('./puce.png')} alt=\"logo puce\" />\r\n            </div>\r\n            <div className=\"cardNumber\">\r\n                <p>{props.cardNumber ? props.cardNumber : '•••• •••• •••• ••••'}</p>\r\n            </div>\r\n            <div className=\"d-flex  bottomSection\">\r\n                <div className=\" right-bottomSection\">\r\n                    <p className=\"date\">{props.date ? props.date : '••/••'}</p>\r\n                    <h5 className=\"holderName\">{props.holderName ? props.holderName : '••••••••••••••••••••'}</h5>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\nexport default CreditCard","import React, { Component } from 'react';\r\nimport './contain.css'\r\nclass CardContain extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      cardNumber: '',\r\n      holderName: '',\r\n      date: ''\r\n    }\r\n  }\r\n\r\n  handleNumberChange(e) {\r\n    let reg = /^[0-9]*$/\r\n    if (reg.test(e.target.value)) {\r\n      let nbr\r\n      if (e.target.value.length <= 4) {\r\n        nbr = e.target.value + '•••• •••• •••• ••••'.slice(e.target.value.length)\r\n      } else if (e.target.value.length >= 5 && e.target.value.length <= 8) {\r\n        nbr = e.target.value.slice(0, 4) + ' ' + e.target.value.slice(4) + '•••• •••• •••• ••••'.slice(e.target.value.length + 1)\r\n      } else if (e.target.value.length >= 9 && e.target.value.length <= 12) {\r\n        nbr = e.target.value.slice(0, 4) + ' ' + e.target.value.slice(4, 8) + ' ' + e.target.value.slice(8) + '•••• •••• •••• ••••'.slice(e.target.value.length + 2)\r\n      } else if (e.target.value.length >= 13 && e.target.value.length <= 16) {\r\n        nbr = e.target.value.slice(0, 4) + ' ' + e.target.value.slice(4, 8) + ' ' + e.target.value.slice(8, 12) + ' ' + e.target.value.slice(12) + '•••• •••• •••• ••••'.slice(e.target.value.length + 3)\r\n      }\r\n      this.setState({\r\n        cardNumber: e.target.value\r\n      }, () => this.props.updateState(nbr, this.state.holderName, this.state.date)\r\n      )\r\n    }\r\n  }\r\n  // let reg = /^[0-9 ]*$/\r\n  // if (reg.test(e.target.value)) {\r\n  //   let nbr,nbr1\r\n  //   if(e.target.value.length < 4){\r\n  //     nbr = e.target.value + '•••• •••• •••• ••••'.slice(e.target.value.length)\r\n  //     nbr1=e.target.value\r\n  //   }else if(e.target.value.length === 4){\r\n  //     nbr = e.target.value + '•••• •••• •••• ••••'.slice(e.target.value.length)\r\n  //     nbr1=e.target.value+' '\r\n  //   }else if(e.target.value.length >=5 && e.target.value.length <9){\r\n  //     nbr = e.target.value+'•••• •••• •••• ••••'.slice(e.target.value.length)\r\n  //     nbr1=e.target.value\r\n  //   }else if( e.target.value.length === 9){\r\n  //     nbr = e.target.value +'•••• •••• •••• ••••'.slice(e.target.value.length)\r\n  //     nbr1=e.target.value+' '\r\n  //   }else if(e.target.value.length >=10 && e.target.value.length <14){\r\n  //     nbr = e.target.value+'•••• •••• •••• ••••'.slice(e.target.value.length)\r\n  //     nbr1=e.target.value\r\n  //   }else if(e.target.value.length === 14){\r\n  //     nbr = e.target.value+'•••• •••• •••• ••••'.slice(e.target.value.length)\r\n  //     nbr1=e.target.value+' '\r\n  //   }else if(e.target.value.length >=15 && e.target.value.length <=19){\r\n  //     nbr = e.target.value+'•••• •••• •••• ••••'.slice(e.target.value.length)\r\n  //     nbr1=e.target.value\r\n  //   }\r\n  //   this.setState({\r\n  //     cardNumber: nbr1}, () => this.props.updateState(nbr, this.state.holderName, this.state.date)\r\n  //   )\r\n  // }\r\n  handleNameChange(e) {\r\n    let reg = /^[A-Za-z ]*$/\r\n    if (reg.test(e.target.value)) {\r\n      const name = e.target.value.toUpperCase()\r\n      this.setState({\r\n        holderName: e.target.value\r\n      }, () => this.props.updateState(this.state.cardNumber, name, this.state.date)\r\n      )\r\n    }\r\n  }\r\n  handleDateChange(e) {\r\n    let reg = /^[0-9 /]*$/\r\n    if (reg.test(e.target.value)) {\r\n      if (e.target.value[0] + e.target.value[1] > 12) e.target.value = e.target.value[0]\r\n      if (e.target.value[0] > 1) e.target.value = ''\r\n      if (e.target.value.length === 2) {\r\n        e.target.value = e.target.value + '/'\r\n      }\r\n      this.setState({\r\n        date: e.target.value\r\n      }, () => this.props.updateState(this.state.cardNumber, this.state.holderName, this.state.date)\r\n      )\r\n    }\r\n\r\n  }\r\n  render() {\r\n    return (\r\n\r\n      <form className=\"d-flex flex-column\">\r\n        <input type=\"text\" maxLength=\"16\" value={this.state.cardNumber} placeholder=\"Card Number\" onChange={(e) => this.handleNumberChange(e)} />\r\n        <input type=\"text\" maxLength=\"20\" value={this.state.holderName} placeholder=\"Name\" onChange={(e) => this.handleNameChange(e)} />\r\n        <input type=\"text\" maxLength=\"5\" value={this.state.date} placeholder=\"MM/YY\" onChange={(e) => this.handleDateChange(e)} />\r\n      </form>\r\n    )\r\n  }\r\n}\r\nexport default CardContain;","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport CreditCard from './creditCardView'\nimport CardContain from './creditCardContain'\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      cardNumber: '',\n      holderName: '',\n      date: ''\n    }\n  }\n  updateState = (number,name,date) => {\n    this.setState({\n      cardNumber:number,\n      holderName:name,\n      date:date\n    })\n  }\n  render() {\n    return (\n      <div className=\"d-flex flex-row App\">\n\n        <CreditCard cardNumber={this.state.cardNumber} holderName={this.state.holderName} date={this.state.date} />\n        <CardContain updateState={this.updateState} />\n      </div>\n    );\n  }\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}